@model WorkflowInstanceIndexViewModel
@using OrchardCore.Workflows.Models;
@using OrchardCore.Workflows.ViewModels;

<h1>@RenderTitleSegments(T["{0} Instances", Model.WorkflowDefinition.Name])</h1>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="WorkflowDefinition">@T["Workflow Definitions"]</a></li>
        <li class="breadcrumb-item"><a asp-action="Edit" asp-controller="WorkflowDefinition" asp-route-id="@Model.WorkflowDefinition.Id">@Model.WorkflowDefinition.Name</a></li>
        <li class="breadcrumb-item active" aria-current="page">@T["Instances"]</li>
    </ol>
</nav>

<div class="form-group">
    @if (Model.WorkflowInstances.Any())
    {
        using (Html.BeginForm())
        {
            <ul class="list-group">
                @foreach (var entry in Model.WorkflowInstances)
                {
                    var statusCss = "";

                    switch (entry.WorkflowInstance.Status)
                    {
                        case WorkflowStatus.Aborted:
                            statusCss = "warning";
                            break;
                        case WorkflowStatus.Idle:
                        default:
                            statusCss = "secondary";
                            break;
                        case WorkflowStatus.Finished:
                            statusCss = "success";
                            break;
                        case WorkflowStatus.Executing:
                        case WorkflowStatus.Halted:
                        case WorkflowStatus.Resuming:
                        case WorkflowStatus.Starting:
                            statusCss = "info";
                            break;
                        case WorkflowStatus.Faulted:
                            statusCss = "danger";
                            break;
                    }

                    <li class="list-group-item">
                        <div class="properties">
                            <div class="related">
                                <a asp-action="Delete" asp-route-id="@entry.WorkflowInstance.Id" class="btn btn-danger btn-sm" itemprop="RemoveUrl UnsafeUrl">@T["Delete"]</a>
                            </div>

                            <a asp-action="Details" asp-route-id="@entry.WorkflowInstance.Id">@entry.WorkflowInstance.Uid</a>
                            <div>
                                <span class="hint">@T["Created {0}", (object)(await DisplayAsync(await New.TimeSpan(Utc: entry.WorkflowInstance.CreatedUtc)))]</span>
                                <div class="info">
                                    <span class="badge badge-@statusCss">@entry.WorkflowInstance.Status</span>
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
        @await DisplayAsync(Model.Pager)
    }
    else
    {
        <div class="alert alert-info" role="alert">
            @T["<strong>Nothing here!</strong> There are no halted workflows at the moment."]
        </div>
    }
</div>

<div class="form-group">
    <a class="btn btn-secondary" href="@Model.ReturnUrl">@T["Back"]</a>
</div>
