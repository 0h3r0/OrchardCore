/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

.workflow-container .workflow-canvas-container {
  border: 1px solid #e4e5e6;
  border-radius: 0.25em;
  padding: 15px; }

.modal-activities h4.card-title .fa {
  margin-right: 0.5em; }

.workflow-canvas {
  overflow: auto !important;
  position: relative;
  touch-action: none;
  min-height: 400px; }
  .workflow-canvas .activity {
    display: none;
    border: 1px solid #346789;
    box-shadow: 2px 2px 19px #aaa;
    -o-box-shadow: 2px 2px 9px #aaa;
    -webkit-box-shadow: 2px 2px 9px #aaa;
    -moz-box-shadow: 2px 2px 9px #aaa;
    -moz-border-radius: 0.5em;
    border-radius: 0.5em;
    opacity: 0.8;
    min-width: 80px;
    min-height: 80px;
    text-align: left;
    z-index: 20;
    position: absolute;
    background-color: #eeeeef;
    color: #000000;
    font-family: helvetica, sans-serif;
    padding: 1em;
    font-size: 0.7em;
    -webkit-transition: -webkit-box-shadow 0.15s ease-in;
    -moz-transition: -moz-box-shadow 0.15s ease-in;
    -o-transition: -o-box-shadow 0.15s ease-in;
    transition: box-shadow 0.15s ease-in; }
    .workflow-canvas .activity.activity-start {
      background-color: #7ab02c;
      color: #ffffff; }
    .workflow-canvas .activity.activity-blocking {
      background-color: #7ab02c;
      color: #ffffff; }
    .workflow-canvas .activity.jtk-connected {
      border: 1px solid green; }
    .workflow-canvas .activity header h4 {
      font-size: 1.4em; }
      .workflow-canvas .activity header h4 .fa {
        margin-right: 0.5em; }
  .workflow-canvas .jtk-connector {
    z-index: 4; }
  .workflow-canvas .jtk-endpoint, .workflow-canvas .endpointTargetLabel, .workflow-canvas .endpointSourceLabel {
    z-index: 21;
    cursor: pointer; }
  .workflow-canvas .endpointTargetLabel, .workflow-canvas .endpointSourceLabel {
    font-size: 8px; }
  .workflow-canvas .jtk-overlay {
    background-color: transparent; }
  .workflow-canvas .connection-label {
    z-index: 31;
    border: 1px solid #cccccc;
    padding: 0 0.5em;
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    border-radius: 2px;
    background-color: white; }

.modal-activities h4.card-title .fa {
  margin-right: 0.5em; }

.workflow-canvas .activity {
  cursor: move; }
  .workflow-canvas .activity:hover {
    box-shadow: 2px 2px 19px #444;
    -o-box-shadow: 2px 2px 19px #444;
    -webkit-box-shadow: 2px 2px 19px #444;
    -moz-box-shadow: 2px 2px 19px #444;
    opacity: 0.6; }
  .workflow-canvas .activity .activity-commands {
    display: none; }

.workflow-canvas .jtk-drag-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.workflow-canvas path, .workflow-canvas .jtk-endpoint {
  cursor: pointer; }

@media (min-width: 992px) {
  .modal-activities .modal-lg {
    max-width: 1200px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
